// Generated by SolidPython 0.4.6 on 2020-03-17 21:10:39


difference(){
	difference() {
		union() {
			scale(v = 1.1000000000) {
				rotate(a = 180, v = [0, 0, 1]) {
					rotate_extrude($fn = 100, angle = 360, convexity = 10) {
						resize(auto = true, newsize = [45, 0, 0]) {
							import(convexity = 3, file = "coffee-grinder/round_holder_width_45_half.svg", origin = [0, 0]);
						}
					}
				}
			}
			translate(v = [0, 0, 10]) {
			}
		}
	}
	/* Holes Below*/
	union(){
		union(){
			translate(v = [0, 0, 10]){
				rotate(a = 180, v = [0, 0, 1]) {
					rotate_extrude($fn = 100, angle = 360, convexity = 10) {
						resize(auto = true, newsize = [45, 0, 0]) {
							import(convexity = 3, file = "coffee-grinder/round_holder_width_45_half.svg", origin = [0, 0]);
						}
					}
				}
			}
		}
		union() {
			rotate(a = 0, v = [0, 0, 1]) {
				translate(v = [0, 0, 10]) {
					translate(v = [-250.0000000000, 0, 0]) {
						rotate(a = 90, v = [1, 0, 0]) {
							translate(v = [0, 0, -1.5000000000]) {
								linear_extrude(height = 3) {
									square(size = 500);
								}
							}
						}
					}
				}
			}
			rotate(a = 72, v = [0, 0, 1]) {
				translate(v = [0, 0, 10]) {
					translate(v = [-250.0000000000, 0, 0]) {
						rotate(a = 90, v = [1, 0, 0]) {
							translate(v = [0, 0, -1.5000000000]) {
								linear_extrude(height = 3) {
									square(size = 500);
								}
							}
						}
					}
				}
			}
			rotate(a = 144, v = [0, 0, 1]) {
				translate(v = [0, 0, 10]) {
					translate(v = [-250.0000000000, 0, 0]) {
						rotate(a = 90, v = [1, 0, 0]) {
							translate(v = [0, 0, -1.5000000000]) {
								linear_extrude(height = 3) {
									square(size = 500);
								}
							}
						}
					}
				}
			}
			rotate(a = 216, v = [0, 0, 1]) {
				translate(v = [0, 0, 10]) {
					translate(v = [-250.0000000000, 0, 0]) {
						rotate(a = 90, v = [1, 0, 0]) {
							translate(v = [0, 0, -1.5000000000]) {
								linear_extrude(height = 3) {
									square(size = 500);
								}
							}
						}
					}
				}
			}
			rotate(a = 288, v = [0, 0, 1]) {
				translate(v = [0, 0, 10]) {
					translate(v = [-250.0000000000, 0, 0]) {
						rotate(a = 90, v = [1, 0, 0]) {
							translate(v = [0, 0, -1.5000000000]) {
								linear_extrude(height = 3) {
									square(size = 500);
								}
							}
						}
					}
				}
			}
		}
	} /* End Holes */ 
}
/***********************************************
*********      SolidPython code:      **********
************************************************
 
from .lib.grinder_base import GrinderBase
from .lib.dell_connector import DellConnector
from .lib.holder.round_holder import RoundHolder

from solid import *
from solid.utils import *  # Not required, but the utils module is useful


base = GrinderBase()

top = GrinderBase.custom_diameter(90, 17)

connector = DellConnector(x_holders=4, y_holders=2)

scad = connector.rotate_to_print(connector.multiple_dell_holder())
scad = connector.multiple_dell_holder()

scad = RoundHolder().hollow_holder_shape()
scad = RoundHolder().completeHolder()

scad_render_to_file(scad, "coffee-grinder3.scad") 
 
************************************************/
